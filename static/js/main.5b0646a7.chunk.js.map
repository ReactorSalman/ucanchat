{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","facebookProvider","FacebookAuthProvider","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","placeholder","type","disabled","props","messageClass","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAUAA,IAASC,cAAc,CACtBC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CAGR,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAsB3B,SAASC,IAYR,OACC,mCACC,gCACC,gCACC,wBAAQC,UAAU,4BAA4BC,QAdzB,WACxB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAYlB,kCAGA,wBAAQF,UAAU,8BAA8BC,QAZzB,WAC1B,IAAMI,EAAmB,IAAIjB,IAASS,KAAKS,qBAC3CT,EAAKO,gBAAgBC,IAUlB,uCAID,6GAOJ,SAASE,IACR,OAAOV,EAAKW,aACX,wBAAQR,UAAU,YAAYC,QAAS,kBAAMJ,EAAKY,WAAlD,sBAKF,SAASC,IACR,IAAMC,EAAQC,mBACRC,EAAcf,EAAUgB,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHlC,EAKAC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EALY,sBAOeC,mBAAS,IAPxB,mBAOZC,EAPY,KAODC,EAPC,KAUbC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,EAGO9B,EAAKW,YAAvBoB,EAHW,EAGXA,IAAKC,EAHM,EAGNA,SAHM,SAKbhB,EAAYiB,IAAI,CACrBC,KAAMT,EACNU,UAAW5C,IAASU,UAAUmC,WAAWC,kBACzCN,MACAC,aATkB,OAYnBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAbtB,2CAAH,sDAgBjB,OAAQ,qCACP,iCAEEjB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,sBAAMC,IAAKhC,OAIZ,uBAAMiC,SAAUpB,EAAhB,UAEC,uBAAOxB,UAAU,mBAAmB6C,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,QAAQG,YAAY,uBAEjH,wBAAQhD,UAAU,UAAUiD,KAAK,SAASC,UAAW5B,EAArD,wBAOH,SAASkB,EAAYW,GAAQ,IAAD,EACKA,EAAMV,QAA9BV,EADmB,EACnBA,KAAMH,EADa,EACbA,IAAKC,EADQ,EACRA,SAEbuB,EAAexB,IAAQ/B,EAAKW,YAAYoB,IAAM,OAAS,WAE7D,OAAQ,mCACP,sBAAK5B,UAAS,kBAAaoD,GAA3B,UACC,qBAAKC,IAAKxB,GAAY,0DACtB,4BAAIE,SAMQuB,MApHf,WAAgB,IAAD,EAECC,YAAa1D,GAArB2D,EAFO,oBAId,OACC,sBAAKxD,UAAU,MAAf,UACC,mCACC,oBAAIA,UAAU,gBAAd,sBACA,cAACO,EAAD,OAGD,kCACEiD,EAAO,cAAC9C,EAAD,IAAe,cAACX,EAAD,UCxBZ0D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5b0646a7.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n\tapiKey: \"AIzaSyBD8851btTft8iHMaDYXmLRKYhoUEBOzXA\",\n\tauthDomain: \"ushipfriend.firebaseapp.com\",\n\tdatabaseURL: \"https://ushipfriend.firebaseio.com\",\n\tprojectId: \"ushipfriend\",\n\tstorageBucket: \"ushipfriend.appspot.com\",\n\tmessagingSenderId: \"982688180304\",\n\tappId: \"1:982688180304:web:1aac3d101c705776be4955\"\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n\n\tconst [user] = useAuthState(auth);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1 className=\"app-name-font\">UcanChat</h1>\n\t\t\t\t<SignOut />\n\t\t\t</header>\n\n\t\t\t<section>\n\t\t\t\t{user ? <ChatRoom /> : <SignIn />}\n\t\t\t</section>\n\n\t\t</div>\n\t);\n}\n\nfunction SignIn() {\n\n\tconst signInWithGoogle = () => {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tauth.signInWithPopup(provider);\n\t}\n\n\tconst signInWithFacebook = () => {\n\t\tconst facebookProvider = new firebase.auth.FacebookAuthProvider();\n\t\tauth.signInWithPopup(facebookProvider);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"loginBtn loginBtn--google\" onClick={signInWithGoogle}>\n\t\t\t\t\t\tSign in using Google\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"loginBtn loginBtn--facebook\" onClick={signInWithFacebook}>\n\t\t\t\t\t\tSign in using facebook\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<p>Do not violate the community guidelines or you will be banned for life!</p>\n\t\t\t</div>\n\t\t</>\n\t)\n\n}\n\nfunction SignOut() {\n\treturn auth.currentUser && (\n\t\t<button className=\"logoutBtn\" onClick={() => auth.signOut()}>Sign Out</button>\n\t)\n}\n\n\nfunction ChatRoom() {\n\tconst dummy = useRef();\n\tconst messagesRef = firestore.collection('messages');\n\tconst query = messagesRef.orderBy('createdAt').limit(25);\n\n\tconst [messages] = useCollectionData(query, { idField: 'id' });\n\n\tconst [formValue, setFormValue] = useState('');\n\n\n\tconst sendMessage = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst { uid, photoURL } = auth.currentUser;\n\n\t\tawait messagesRef.add({\n\t\t\ttext: formValue,\n\t\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tuid,\n\t\t\tphotoURL\n\t\t})\n\n\t\tsetFormValue('');\n\t\tdummy.current.scrollIntoView({ behavior: 'smooth' });\n\t}\n\n\treturn (<>\n\t\t<main>\n\n\t\t\t{messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n\t\t\t<span ref={dummy}></span>\n\n\t\t</main>\n\n\t\t<form onSubmit={sendMessage}>\n\n\t\t\t<input className=\"placeholder-view\" value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n\t\t\t<button className=\"sendBtn\" type=\"submit\" disabled={!formValue}>Send</button>\n\n\t\t</form>\n\t</>)\n}\n\n\nfunction ChatMessage(props) {\n\tconst { text, uid, photoURL } = props.message;\n\n\tconst messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n\treturn (<>\n\t\t<div className={`message ${messageClass}`}>\n\t\t\t<img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n\t\t\t<p>{text}</p>\n\t\t</div>\n\t</>)\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}